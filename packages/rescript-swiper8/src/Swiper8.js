// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "@rescript/std/lib/es6/curry.js";
import * as React from "react";
import * as Belt_Option from "@rescript/std/lib/es6/belt_Option.js";
import * as Caml_option from "@rescript/std/lib/es6/caml_option.js";
import * as React$1 from "swiper/react";
import * as Swiper8_externalJs from "./Swiper8_external.js";

var SwiperReact = {};

var Slide = {};

function useSwiperA11yWorkaround(swiperRef) {
  React.useEffect((function () {
          var swiper = swiperRef.current.swiper;
          Belt_Option.forEach((swiper == null) ? undefined : Caml_option.some(swiper), (function (swiper) {
                  var swiperParams = swiper.params;
                  var slideTo = swiperParams.loop ? (function (prim0, prim1) {
                        prim0.slideToLoop(prim1);
                        
                      }) : (function (prim0, prim1) {
                        prim0.slideTo(prim1);
                        
                      });
                  return Curry._2(slideTo, swiper, 0);
                }));
          
        }), [swiperRef.current]);
  
}

function fixA11y(prim) {
  Swiper8_externalJs.fixA11y(prim);
  
}

var A11y = {
  useSwiperA11yWorkaround: useSwiperA11yWorkaround,
  fixA11y: fixA11y
};

function Swiper8(Props) {
  var id = Props.id;
  var children = Props.children;
  var allowTouchMove = Props.allowTouchMove;
  var autoHeight = Props.autoHeight;
  var loop = Props.loop;
  var swiperRef = Props.swiperRef;
  var slidesPerView = Props.slidesPerView;
  var slidesOffsetBefore = Props.slidesOffsetBefore;
  var spaceBetween = Props.spaceBetween;
  var tag = Props.tag;
  var wrapperTag = Props.wrapperTag;
  var aria$label = Props["aria-label"];
  var onInit = Props.onInit;
  var onSwiper = Props.onSwiper;
  var onSlideChange = Props.onSlideChange;
  var onSlideChangeTransitionEnd = Props.onSlideChangeTransitionEnd;
  var onProgress = Props.onProgress;
  var onAfterInit = Props.onAfterInit;
  var onRealIndexChange = Props.onRealIndexChange;
  var a11y = Props.a11y;
  var centeredSlides = Props.centeredSlides;
  useSwiperA11yWorkaround(swiperRef);
  var tmp = {
    children: children,
    ref: swiperRef,
    onSlideChange: (function (swiper) {
        Swiper8_externalJs.fixA11y(swiper);
        return Belt_Option.forEach(onSlideChange, (function (f) {
                      return Curry._1(f, swiper);
                    }));
      }),
    onSlideChangeTransitionEnd: (function (swiper) {
        Swiper8_externalJs.fixA11y(swiper);
        return Belt_Option.forEach(onSlideChangeTransitionEnd, (function (f) {
                      return Curry._1(f, swiper);
                    }));
      })
  };
  if (id !== undefined) {
    tmp.id = id;
  }
  if (allowTouchMove !== undefined) {
    tmp.allowTouchMove = allowTouchMove;
  }
  if (autoHeight !== undefined) {
    tmp.autoHeight = autoHeight;
  }
  if (loop !== undefined) {
    tmp.loop = loop;
  }
  if (slidesPerView !== undefined) {
    tmp.slidesPerView = slidesPerView;
  }
  if (slidesOffsetBefore !== undefined) {
    tmp.slidesOffsetBefore = slidesOffsetBefore;
  }
  if (spaceBetween !== undefined) {
    tmp.spaceBetween = spaceBetween;
  }
  if (tag !== undefined) {
    tmp.tag = tag;
  }
  if (wrapperTag !== undefined) {
    tmp.wrapperTag = wrapperTag;
  }
  if (aria$label !== undefined) {
    tmp["aria-label"] = aria$label;
  }
  if (onInit !== undefined) {
    tmp.onInit = Caml_option.valFromOption(onInit);
  }
  if (onSwiper !== undefined) {
    tmp.onSwiper = Caml_option.valFromOption(onSwiper);
  }
  if (onProgress !== undefined) {
    tmp.onProgress = Caml_option.valFromOption(onProgress);
  }
  if (onAfterInit !== undefined) {
    tmp.onAfterInit = Caml_option.valFromOption(onAfterInit);
  }
  if (onRealIndexChange !== undefined) {
    tmp.onRealIndexChange = Caml_option.valFromOption(onRealIndexChange);
  }
  if (a11y !== undefined) {
    tmp.a11y = a11y;
  }
  if (centeredSlides !== undefined) {
    tmp.centeredSlides = centeredSlides;
  }
  return React.createElement(React$1.Swiper, tmp);
}

var make = Swiper8;

export {
  SwiperReact ,
  Slide ,
  A11y ,
  make ,
  
}
/* react Not a pure module */
